<?php

if ( ! defined( 'ABSPATH' ) ) {
	exit; // Exit if accessed directly
}

if ( ! class_exists( 'Sandbox_Settings_Template', false ) ) :

/**
 * Sandbox_Settings_Template.
 */
class Sandbox_Settings_Template extends Sandbox_Settings_Page {

    /**
     *  Sandbox redirect URL option key
     */
    const REDIRECT_URL_OPTION = 'sandbox_redirect_url';

	/**
	 * Constructor.
	 */
	public function __construct() {
		$this->id    = 'template';
		$this->label = __( 'Template', 'sandbox' );
		parent::__construct();
	}

    /**
     *  Template page notice text
     */
    public function get_upgrade_text(){
        $upgradeText = __('Create Templates, Instantly Duplicate Installs, & More', 'sandbox');
        if (!empty(Sandbox::getInstance()->server_data['license']) && Sandbox::getInstance()->server_data['license']['plan_name'] == Sandbox::FREE_TRIAL_PLAN) {
            $upgradeText = sprintf(__('In %d days your installs will be moved to poopy.life'), Sandbox::getInstance()->getFreeTrialDaysLeft());
        }
        echo $upgradeText;
    }

    /**
     * @return mixed|string|void
     */
    public function getRedirectUrl() {
        return get_option(self::REDIRECT_URL_OPTION, false);
    }

    /**
     * @return string
     */
    public function getTemplateUrl($include_redirect = true) {

        if (!empty($this->sandbox_settings['creation_uri'])){
            $url = Sandbox_API::getInstance()->get_host() . $this->sandbox_settings['creation_uri'];
        }
        else{
            $url = Sandbox_API::getInstance()->get_host() . 'create?src=' . Sandbox_API::getInstance()->sandbox_domain . '&key=•••••••••';
        }
        return $url . ($this->getRedirectUrl() && $include_redirect ? '&url=' . $this->getRedirectUrl() : '');
    }

    /**
     * @param $permission
     * @return int
     */
    public function getPermission($permission){

        if (empty(Sandbox::getInstance()->server_data['permissions']['own'])){
            return TRUE;
        }

        return isset(Sandbox::getInstance()->server_data['permissions']['own'][$permission]) ? intval(Sandbox::getInstance()->server_data['permissions']['own'][$permission]) : 0;
    }

    /**
     * @param $permission
     * @return int
     */
    public function getParentPermission($permission){

        if (empty(Sandbox::getInstance()->server_data['permissions']['parent'])){
            return TRUE;
        }

        return isset(Sandbox::getInstance()->server_data['permissions']['parent'][$permission]) ? intval(Sandbox::getInstance()->server_data['permissions']['parent'][$permission]) : 0;
    }

	/**
	 * Save settings.
	 */
	public function save() {

        if ( ! empty($_POST['sandbox_template_settings']) ){

            check_admin_referer('sandbox-settings');

            if (!$this->errors->get_error_codes()) { // no validation errors detected

                // Create sandbox template.
                if (isset($_POST['save'])){
                    if (!empty($_POST['is_add_redirect'])){
                        update_option(self::REDIRECT_URL_OPTION, $_POST['sandbox_redirect_url']);
                    }
                    $is_update = empty($_POST['create_sandbox_template']);
                    $result = Sandbox_API::getInstance()->sandbox_create_template($is_update);
                    if (!empty($result['error'])){
                        Sandbox_Admin_Settings::add_error($result['error']);
                    }
                }

                // Update sandbox permissions.
                if (isset($_POST['save_permissions'])){
                    $result = Sandbox_API::getInstance()->sandbox_update_permissions($_POST['sandbox_permissions']);
                    if (!empty($result['error'])){
                        Sandbox_Admin_Settings::add_error($result['error']);
                    }
                    delete_transient(Sandbox_API::SERVER_DATA_TRANSIENT);
                }

                // Delete sandbox template.
                if (isset($_POST['delete_template'])){
                    $result = Sandbox_API::getInstance()->sandbox_delete_template();
                    if (!empty($result['error'])){
                        Sandbox_Admin_Settings::add_error($result['error']);
                    }
                }

            }
        }
	}

    /**
     *  Render Template Page
     */
    public function output() {

        Sandbox::getInstance()->server_data = Sandbox_API::getInstance()->get_sandbox_data();

        parent::output(); // TODO: Change the autogenerated stub
    }
}

endif;

return new Sandbox_Settings_Template();
